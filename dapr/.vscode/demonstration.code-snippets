{
	// Place your dapr workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"Dapr Client" : {
		"scope": "csharp",
		"prefix": "daprclient",
		"body": [
			"using Dapr.Client;",
			"",
			"var client = new DaprClientBuilder().Build();"
		]
	},
	"Dapr State Init" : {
		"scope":"csharp",
		"prefix": "daprStateInit",
		"body" : [
			"string DAPR_STORE_NAME = \"statestore\";"
		]
	},
	"Dapr Save state": {
		"scope": "csharp",
		"prefix": "daprStateSave",
		"body" : [
			"await client.SaveStateAsync(/*store*/$1, /*key*/$2, /*value*/$3);"
		]
	},
	"Dapr Save state - Sample": {
		"scope": "csharp",
		"prefix": "daprStateSaveSample",
		"body" : [
			"await client.SaveStateAsync(DAPR_STORE_NAME, order.Id, order);"
		]
	},
	"Dapr Get state" : {
		"scope": "csharp",
		"prefix": "daprStateGet",
		"body" : [
			"var result = await client.GetStateAsync<string>(DAPR_STORE_NAME, /*key*/$1);"
		]
	}, 
	"Dapr Get state - Sample" : {
		"scope": "csharp",
		"prefix": "daprStateGetSample",
		"body" : [
			"Order result = await client.GetStateAsync<Order>(DAPR_STORE_NAME, order.Id);"
		]
	}, 
	"Dapr Delete State " : {
		"scope": "csharp",
		"prefix": "daprStateDel",
		"body" : [
			"await client.DeleteStateAsync(DAPR_STORE_NAME, /*key*/$1);"
		]
	},
	"Dapr Delete State - Sample" : {
		"scope": "csharp",
		"prefix": "daprStateDelSample",
		"body" : [
			"await client.DeleteStateAsync(DAPR_STORE_NAME, order.Id);"
		]
	}

}